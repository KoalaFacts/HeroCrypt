name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  CI: true
  # Project paths
  MAIN_PROJECT: src/HeroCrypt/HeroCrypt.csproj
  SRC_PROJECTS: src/**/*.csproj
  TEST_PROJECTS: tests/**/*.csproj

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality

    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{matrix.language}}"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v5

    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause

  secrets-scan:
    name: Secrets Scanning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  crypto-validation:
    name: Cryptographic Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v5

    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 9.0.x

    - name: Run RFC Compliance Tests
      run: |
        dotnet restore
        dotnet build --configuration Release
        dotnet test --filter "Category=Compliance" --configuration Release --logger "console;verbosity=detailed"

    - name: Run Cryptographic Test Vectors
      run: |
        dotnet test --filter "Category=TestVectors" --configuration Release --logger "console;verbosity=detailed"

    - name: Validate Algorithm Implementations
      run: |
        dotnet test --filter "Category=AlgorithmValidation" --configuration Release --logger "console;verbosity=detailed"